railcraft.gui.anchor.fuel.remaining=§f@.2f hours
railcraft.gui.anchor.fuel=§fEnder Pearls
railcraft.gui.anchor.pair.fail.alignment=§f%1$s is not axis aligned with that %2$s
railcraft.gui.anchor.pair.fail.distance=§f%1$s is too far to pair with that %2$s
railcraft.gui.anchor.pair.fail.dimension=§f%1$s is in a different dimension than the target
railcraft.gui.anchor.pair.fail.invalid=§fThis is not a valid target for pairing with the %s
railcraft.gui.anchor.pair.fail.unloaded=§fTarget was unloaded while attempting to pair with %s
railcraft.gui.anchor.pair.cancel=§f%s pairing was cancelled
railcraft.gui.anchor.pair.start=§f%s pairing was initiated
railcraft.gui.anchor.pair.success=§f%s was successfully paired

railcraft.gui.aspect.blink.red.name=§fBlink Red
railcraft.gui.aspect.blink.yellow.name=§fBlink Yellow
railcraft.gui.aspect.green.name=§fGreen
railcraft.gui.aspect.off.name=§fOff
railcraft.gui.aspect.red.name=§fRed
railcraft.gui.aspect.yellow.name=§fYellow

railcraft.gui.aura.disable=§f@s Aura Off
railcraft.gui.aura.enable=§f@s Aura On

railcraft.gui.blast.furnace=§fAdvanced Coke Oven

railcraft.gui.bore.ballast=§fBallast
railcraft.gui.bore.fuel=§fFuel
railcraft.gui.bore.head=§fHead
railcraft.gui.bore.track=§fTrack

railcraft.gui.box.aspect.action=§fEmit Redstone on Aspect
railcraft.gui.box.capacitor.duration=§fEmit Redstone for @d seconds
railcraft.gui.box.capacitor.immediate=§fRising Edge
railcraft.gui.box.capacitor.immediate.tip=§fStart timer as soon as the input signal is received.
railcraft.gui.box.capacitor.delayed=§fFalling Edge
railcraft.gui.box.capacitor.delayed.tip=§fStart timer when the last input signal turns off.
railcraft.gui.box.controller.aspect.default=§fDefault Aspect:
railcraft.gui.box.controller.aspect.redstone=§fRedstone Aspect:

railcraft.gui.cart.tnt.fuse=§fFuse
railcraft.gui.cart.track.relayer.pattern=§fPattern
railcraft.gui.cart.track.relayer.stock=§fStock
railcraft.gui.cart.undercutter.pattern=§fPatterns
railcraft.gui.cart.undercutter.sides=§fSides
railcraft.gui.cart.undercutter.stock=§fStock
railcraft.gui.cart.undercutter.under=§fUnder

railcraft.gui.coke.oven=§fCoke Oven

railcraft.gui.detector.item.analog=§fAnalog
railcraft.gui.detector.item.anything=§fAnything
railcraft.gui.detector.item.at_least=§fAt Least
railcraft.gui.detector.item.at_most=§fAt Most
railcraft.gui.detector.item.empty=§fEmpty
railcraft.gui.detector.item.exactly=§fExactly
railcraft.gui.detector.item.filtered=§fFiltered
railcraft.gui.detector.item.full=§fFull
railcraft.gui.detector.item.greater_than=§fGreater Than
railcraft.gui.detector.item.less_than=§fLess Than
railcraft.gui.detector.item.not_empty=§fNot Empty
railcraft.gui.detector.loco.primary=§fPrimary Color
railcraft.gui.detector.loco.secondary=§fSecondary Color
railcraft.gui.detector.tank.tip.analog=§fEmit Analog Redstone\n based on amount in tank
railcraft.gui.detector.tank.tip.empty=§fMatch empty tanks
railcraft.gui.detector.tank.tip.full=§fMatch full tanks
railcraft.gui.detector.tank.tip.half=§fMatch more than half full tanks
railcraft.gui.detector.tank.tip.less.than.full=§fMatch less than full tanks
railcraft.gui.detector.tank.tip.less.than.half=§fMatch less than half full tanks
railcraft.gui.detector.tank.tip.less.than.most=§fMatch less than 3/4th full tanks
railcraft.gui.detector.tank.tip.less.than.quarter=§fMatch less than quarter full tanks
railcraft.gui.detector.tank.tip.most=§fMatch more than 3/4th full tanks
railcraft.gui.detector.tank.tip.not.empty=§fMatch non-empty tanks
railcraft.gui.detector.tank.tip.quarter=§fMatch more than quarter full tanks
railcraft.gui.detector.tank.tip.void=§fMatch any amount
railcraft.gui.detector.train.size=§fTrain Size =§f @d
railcraft.gui.detector.villager.any=§fAny
railcraft.gui.detector.villager.equals=§fEquals
railcraft.gui.detector.villager.none=§fNone
railcraft.gui.detector.villager.not=§fNot

railcraft.gui.electric.meter.charge=§fCharge: @.2fc | Draw: @.2fc/t | Loss: @.2fc/t

railcraft.gui.energy.loader.empty=§fHold Empty
railcraft.gui.energy.loader.fill=§fTop Off
railcraft.gui.energy.unloader.wait=§fWait till Empty

railcraft.gui.engrave.entercode=§fEnter Unlock Code:
railcraft.gui.engrave.getmore1=§fVisit the links below
railcraft.gui.engrave.getmore2=§fto find more unlock codes!
railcraft.gui.engrave.openunlock=§fUnlock Emblems
railcraft.gui.engrave.unlock.exists=§fDuplicate!
railcraft.gui.engrave.unlock.fail=§fFailure!
railcraft.gui.engrave.unlock.success=§fSuccess!
railcraft.gui.engrave.unlock=§fUnlock!
railcraft.gui.engrave=§fEngrave

railcraft.gui.feed.station.feed=§fFeed

railcraft.gui.filter=§fFilter
railcraft.gui.filters.carts=§fCarts
railcraft.gui.filters=§fFilters

railcraft.gui.goggles.aura.anchor=§fAnchor
railcraft.gui.goggles.aura.none=§fNone
railcraft.gui.goggles.aura.signalling=§fSignalling
railcraft.gui.goggles.aura.surveying=§fSurveying
railcraft.gui.goggles.aura.tracking=§fTracking
railcraft.gui.goggles.aura.tuning=§fTuning
railcraft.gui.goggles.mode=§fCurrent Aura: @s
railcraft.gui.goggles.tip=§fUse from hotbar to change Auras

railcraft.gui.help=§fHelp

railcraft.gui.ic2.energy.rate=§fRate: @d EU

railcraft.gui.item.loader.all.tip=§fMove all matching items
railcraft.gui.item.loader.all=§fAll
railcraft.gui.item.loader.buffer=§fBuffer
railcraft.gui.item.loader.complete.tip=§fEmit Redstone when complete
railcraft.gui.item.loader.complete=§fComplete
railcraft.gui.item.loader.excess.tip=§fKeep the items in the filter\n move the rest
railcraft.gui.item.loader.excess=§fExcess
railcraft.gui.item.loader.immediate.tip=§fEmit Redstone if no items\n were moved
railcraft.gui.item.loader.immediate=§fImmediate
railcraft.gui.item.loader.manual.tip=§fNever emit Redstone
railcraft.gui.item.loader.manual=§fManual
railcraft.gui.item.loader.partial.tip=§fEmit Redstone if no items were\n moved and cart is not empty
railcraft.gui.item.loader.partial=§fPartial
railcraft.gui.item.loader.stock.tip=§fMoved items until the\n destination matches filter
railcraft.gui.item.loader.stock=§fStock
railcraft.gui.item.loader.transfer.tip=§fMove exactly as many\n items as are in the filter
railcraft.gui.item.loader.transfer=§fTransfer

railcraft.gui.link.broken=§fLink Broken
railcraft.gui.link.created=§fLink Created
railcraft.gui.link.failed=§fLink Failed
railcraft.gui.link.started=§fLink Started

railcraft.gui.liquid.capacity=§fCapacity
railcraft.gui.liquid.loader.empty.tip=§fHold empty carts
railcraft.gui.liquid.loader.empty=§fHold Empty
railcraft.gui.liquid.loader.fill.tip=§fHold carts until completely full
railcraft.gui.liquid.loader.fill=§fForce Full
railcraft.gui.liquid.loader.immediate.tip=§fEmit Redstone if no\n liquid was moved
railcraft.gui.liquid.loader.immediate=§fImmediate
railcraft.gui.liquid.loader.manual.tip=§fNever emit Redstone
railcraft.gui.liquid.loader.manual=§fManual
railcraft.gui.liquid.unloader.empty.tip=§fHold Carts until\n completely empty
railcraft.gui.liquid.unloader.empty=§fEmpty
railcraft.gui.liquid.unloader.immediate.tip=§fEmit Redstone if no\n liquid was moved
railcraft.gui.liquid.unloader.immediate=§fImmediate
railcraft.gui.liquid.unloader.manual.tip=§fNever emit Redstone
railcraft.gui.liquid.unloader.manual=§fManual

railcraft.gui.locomotive.mode.idle=§fIdle
railcraft.gui.locomotive.mode.running=§fRunning
railcraft.gui.locomotive.mode.shutdown=§fShutdown
railcraft.gui.locomotive.electric.tip.button.mode.running=§fMakes the Locomotive move.
railcraft.gui.locomotive.electric.tip.button.mode.shutdown=§fStops the locomotive.
railcraft.gui.locomotive.steam.tip.button.mode.idle=§fLocomotive reduces fuel\n usage, but retains its heat.\n If the train is held by a track,\n it behaves as if Idle.
railcraft.gui.locomotive.steam.tip.button.mode.running=§fMakes the Locomotive move.
railcraft.gui.locomotive.steam.tip.button.mode.shutdown=§fShuts off the Locomotive.\n Halts all movement and\n begins the cool-down process.\n This can take some time.
railcraft.gui.locomotive.tip.button.locked=§fThis cart is locked to\n {owner}.\n It will only accept Tickets\n issued by them or an Op.
railcraft.gui.locomotive.tip.button.private=§fThis cart is private to\n {owner}.\n It can only be controlled\n by them or an Op.
railcraft.gui.locomotive.tip.button.unlocked=§fClick to lock Locomotive.\n Once locked, it will\n only accept Tickets\n issued by you or an Op.
railcraft.gui.locomotive.tip.item.emblem=§f§oEmblem:§r @s
railcraft.gui.locomotive.tip.item.model.default=§fDefault Model
railcraft.gui.locomotive.tip.item.model=§f§oModel:§r @s
railcraft.gui.locomotive.tip.item.owner=§f§oOwner:§r @s
railcraft.gui.locomotive.tip.item.primary=§f§oPrimary Color:§r @s
railcraft.gui.locomotive.tip.item.secondary=§f§oSecondary Color:§r @s
railcraft.gui.locomotive.tip.item.whistle=§f§oWhistle Pitch:§r @s
railcraft.gui.locomotive.tip.slot.ticket=§fInsert Ticket

railcraft.gui.mag.glass.aspect=§fThe signal aspect is %s
railcraft.gui.mag.glass.aspect.dual=§fThe signal aspect is %1$s at top and %2$s at bottom
railcraft.gui.mag.glass.placedby=§f%1$s was placed by %2$s

railcraft.gui.rolling.machine.tip.craft=§f§e§o-click to craft-

railcraft.gui.routing.logic.blank=§fBlank Table
railcraft.gui.routing.logic.insufficient.operands=§fInsufficient Operands
railcraft.gui.routing.logic.malformed.syntax=§fMalformed Syntax
railcraft.gui.routing.logic.regex.invalid=§fInvalid Regex Pattern
railcraft.gui.routing.logic.regex.unsupported=§fRegex Unsupported
railcraft.gui.routing.logic.unrecognized.keyword=§fUnrecognized Keyword
railcraft.gui.routing.slot.label=§fRouting Table
railcraft.gui.routing.table.editor=§fLast edited by @s
railcraft.gui.routing.table.manual.numPages=§f11
railcraft.gui.routing.table.manual.page1=§fThe Routing Table when placed in a Routing Detector or Switch will define a set of rules that are used to match against any passing Locomotive. These rules are define using a simple logic syntax that allows you to create rules as simple or complex as you like. The syntax is a Prefix Notation script, the Operators are followed by the Operands. Only one keyword is allowed per line. If no Operator is specified, OR is assumed. Routing Tables can be copied by placing two or more in a crafting grid.
railcraft.gui.routing.table.manual.page2=§fOperator Keywords:\n   AND - Two Operands, both must be true.\n   OR - Two Operands, one must be true.\n   NOT - Invert the following Operand.
railcraft.gui.routing.table.manual.page3=§fCondition Keywords:\n   Dest=<string>\n      If the Locomotive's Destination\n      string starts with this string,\n      the condition is true.\n      "Dest=null" will match carts\n      with no destination.\n   Owner=<username>\n      True if the Locomotive belongs\n      to this person.
railcraft.gui.routing.table.manual.page4=§fCondition Keywords:\n   Name=<entityname>\n      True if it matches the\n      Minecart's name.\n      "Name=null" will match carts\n      with no custom name.\n   Type=<modid:itemname>\n      True if it matches the\n      Minecart's item name.
railcraft.gui.routing.table.manual.page5=§fCondition Keywords:\n   Riding=<username>\n      True if the Train is ridden\n      by this person.\n   Ridden=<true/false>\n      True if the Train is\n      being ridden by a player.
railcraft.gui.routing.table.manual.page6=§fCondition Keywords:\n   Color=<primary>,<secondary>\n      True if the Locomotive's primary\n      and secondary colors match.\n      Accepts "Any" as a wildcard.\n      Colors: Black, Red, Green, Brown, Blue,\n      Purple, Cyan, LightGray, Gray, Pink, Lime,\n      Yellow, LightBlue, Magenta, Orange, White\n   NeedsRefuel=<true/false>\n      If the Locomotive is low on Fuel\n      or Water this will divert it.
railcraft.gui.routing.table.manual.page7=§fCondition Keywords:\n   Redstone=<true/false>\n      True if the Routing Block\n      is being powered by Redstone.
railcraft.gui.routing.table.manual.page8=§fCondition Keywords:\n   Loco=<string>\n      True if locomotive matches parameter string.\n      Accepted strings: electric, steam, none.\n      Using parameter none will only return true if there is no locomotive.
railcraft.gui.routing.table.manual.page9=§fExample Script:\n   Dest=TheFarLands\n   Color=Black,Red\n   AND\n   NOT\n   Owner=RichardG\n   Dest=SecretHideout/OceanEntrance
railcraft.gui.routing.table.manual.page10=§fResult:\n   The script on the previous page will\n   match a Locomotive with a destination\n   of "TheFarLands/Milliways",\n   or that is painted black and red,\n   or that has a destination of\n   "SecretHideout/OceanEntrance",\n   but only if its not owned by RichardG.
railcraft.gui.routing.table.manual.page11=§fRegular Expressions:\n   Some Conditions support\n   Regular Expressions.\n   To use a regex, add a '?' before the '='.\n   Rules are standard Java Patterns.\nSupporting Conditions:\n   Dest, Name\nExample:\n   Dest?=.*Hill
railcraft.gui.routing.table.manual.title=§fRouting Manual
railcraft.gui.routing.table.name=§fName
railcraft.gui.routing.ticket.line1=§fThis Ticket is valid
railcraft.gui.routing.ticket.line2=§ffor the following destination:
railcraft.gui.routing.ticket.manual.title=§fAbout the Golden Ticket
railcraft.gui.routing.ticket.manual=§fThe Golden Ticket is an unlimited use Ticket that can be used to ride any public train or train owned by the issuer. It can also be combined with Paper to produce single use Tickets.
railcraft.gui.routing.ticket.tip.blank=§fBlank Ticket
railcraft.gui.routing.ticket.tip.dest=§fDestination:
railcraft.gui.routing.ticket.tip.issuer=§fIssuer:
railcraft.gui.routing.ticket.title=§fGolden Ticket
railcraft.gui.routing.tip.slot=§fInsert Routing Table
railcraft.gui.routing.track.slot.label=§fTicket
railcraft.gui.routing.track.tip.slot=§fInsert Golden Ticket
railcraft.gui.routing.type.private.tip=§fWill only route\n Locomotives\n that belong to\n {owner}.
railcraft.gui.routing.type.private=§fPrivate Railway
railcraft.gui.routing.type.public.tip=§fWill route any Locomotive.
railcraft.gui.routing.type.public=§fPublic Railway

railcraft.gui.steam.boiler=§f§7 Steam Boiler
railcraft.gui.steam.oven=§fSteam Oven

railcraft.gui.surveyor.abandon=§fSignal Block Survey abandoned
railcraft.gui.surveyor.begin=§fBeginning Signal Block Survey
railcraft.gui.surveyor.invalid=§fSignal Block is not valid
railcraft.gui.surveyor.lost=§fFirst Signal no longer exists, abandoning Survey
railcraft.gui.surveyor.success=§fSuccessfully defined Signal Block
railcraft.gui.surveyor.track=§fNo track found near %s
railcraft.gui.surveyor.unloaded=§fFirst Signal is not in a loaded Chunk
railcraft.gui.surveyor.wrong=§fNot a valid Block Signal

railcraft.gui.switch.motor.action=§fSwitch on Aspect
railcraft.gui.switch.motor.redstone=§fIgnore Redstone

railcraft.gui.tank.iron=§fIron Tank
railcraft.gui.tank.steel=§fSteel Tank
railcraft.gui.tank.water=§fWater Tank

railcraft.gui.ticks=§fticks

railcraft.gui.tip.button.lock.locked=§fThis device is locked to\n {owner}.\n Only the owner or an Op\n can manipulate it.
railcraft.gui.tip.button.lock.notowner=§fYou are not the\n owner of this device.\n It belongs to\n {owner}.
railcraft.gui.tip.button.lock.unlocked=§fClick to lock device.\n Once locked, it can\n only be accessed by\n you or an Op.

railcraft.gui.track.embarking.radius=§fRadius
railcraft.gui.track.mode.change=§fChanged to @s Mode
railcraft.gui.track.coupler.mode.auto.coupler=§fAuto-Coupler
railcraft.gui.track.coupler.mode.coupler=§fCoupler
railcraft.gui.track.coupler.mode.decoupler=§fDecoupler
railcraft.gui.track.locking.mode.boarding.train=§fTrain Boarding
railcraft.gui.track.locking.mode.boarding=§fBoarding
railcraft.gui.track.locking.mode.holding.train=§fTrain Holding
railcraft.gui.track.locking.mode.holding=§fHolding
railcraft.gui.track.locking.mode.lockdown.train=§fTrain Lockdown
railcraft.gui.track.locking.mode.lockdown=§fLockdown
railcraft.gui.track.priming.fuse=§fFuse =§f @d ticks
railcraft.gui.track.launcher.force=§fForce =§f @d

railcraft.gui.trade.station.dice.tip=§fRandom Trade

railcraft.gui.tuner.abandon.chunk=§fController is not in a loaded Chunk, abandoning pairing
railcraft.gui.tuner.abandon.gone=§fController no longer exists, abandoning pairing
railcraft.gui.tuner.abandon.player=§fController pairing Abandoned
railcraft.gui.tuner.start=§fStarted pairing %s with a Receiver
railcraft.gui.tuner.stop=§fStopped pairing %s with a Receiver
railcraft.gui.tuner.success=§f%1$s successfully paired with %2$s

railcraft.gui.turbine.output=§fOutput: @d%%
railcraft.gui.turbine.rotor=§fRotor:
railcraft.gui.turbine=§fSteam Turbine

railcraft.gui.update.message=§fRailcraft @s is available from <http://railcraft.info>

railcraft.gui.tank.aluminium=§fAluminium Tank
railcraft.gui.tank.stainless=§fStainless Steel Tank
railcraft.gui.tank.titanium=§fTitanium Tank
railcraft.gui.tank.tungstensteel=§fTungstensteel Tank
railcraft.gui.tank.palladium=§fPalladium Tank

railcraft.gui.tank.iridium=§fIridium Tank
railcraft.gui.tank.osmium=§fOsmium Tank
railcraft.gui.tank.neutronium=§fNeutronium Tank